[
    {
        "id": "8debaea502f81074",
        "type": "tab",
        "label": "万年历",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2034c7b6dac3fdda",
        "type": "group",
        "z": "8debaea502f81074",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "c22a630fbb945108",
            "a7a9efe5b0f1f632",
            "9916af9c36d18105",
            "f345b28411c95526",
            "a15cfabbf4314a0a",
            "b743f501fb0c7a18",
            "bbbfca1284a32f21",
            "96c674f1d11a6c02",
            "4383db249d30935b",
            "71e505724b4a62bc",
            "b97fe535f42d4d04",
            "596d64b6a293efb7",
            "c986ddd21546ed04",
            "ee75f8d1072a9ff5",
            "ffb89e84d38e0a20",
            "6bc4675c76413538",
            "ede35cb31d84b2a9",
            "5b84e6e8512e2846",
            "aaea7af5a1e46430",
            "fac00e4310bbfd13",
            "ba25fb7a0d76fdc6",
            "04b64d4aaf049959",
            "955564606288bc47",
            "d840f02c0b6833f3",
            "b0d27271977fc8a9",
            "c3d75901827c1bd7",
            "332684eb89e75cd5",
            "383f9a4dae79506c",
            "abb942190509f761"
        ],
        "x": 34,
        "y": 39,
        "w": 1012,
        "h": 422
    },
    {
        "id": "c22a630fbb945108",
        "type": "comment",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "万年历：2025-03-20 更新     ",
        "info": "",
        "x": 890,
        "y": 80,
        "wires": []
    },
    {
        "id": "a7a9efe5b0f1f632",
        "type": "comment",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "注意HA里生成的lunar实体名字",
        "info": "",
        "x": 870,
        "y": 160,
        "wires": []
    },
    {
        "id": "9916af9c36d18105",
        "type": "comment",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "确认HA里的实体是sensor.lunar",
        "info": "",
        "x": 870,
        "y": 200,
        "wires": []
    },
    {
        "id": "f345b28411c95526",
        "type": "ha-button",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "上年",
        "version": 0,
        "debugenabled": false,
        "outputs": 1,
        "entityConfig": "599fae25d4e6723d",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "x": 110,
        "y": 180,
        "wires": [
            [
                "ffb89e84d38e0a20"
            ]
        ]
    },
    {
        "id": "a15cfabbf4314a0a",
        "type": "ha-button",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "上月",
        "version": 0,
        "debugenabled": false,
        "outputs": 1,
        "entityConfig": "8ef66d6c93ec1bb8",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "x": 110,
        "y": 300,
        "wires": [
            [
                "ede35cb31d84b2a9"
            ]
        ]
    },
    {
        "id": "b743f501fb0c7a18",
        "type": "ha-button",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "下年",
        "version": 0,
        "debugenabled": false,
        "outputs": 1,
        "entityConfig": "2ca02103a825efa6",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "x": 110,
        "y": 240,
        "wires": [
            [
                "6bc4675c76413538"
            ]
        ]
    },
    {
        "id": "bbbfca1284a32f21",
        "type": "ha-button",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "下月",
        "version": 0,
        "debugenabled": false,
        "outputs": 1,
        "entityConfig": "2e24de9caf749960",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "x": 110,
        "y": 360,
        "wires": [
            [
                "ee75f8d1072a9ff5"
            ]
        ]
    },
    {
        "id": "96c674f1d11a6c02",
        "type": "ha-button",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "今天",
        "version": 0,
        "debugenabled": false,
        "outputs": 1,
        "entityConfig": "1c6ba2a217deaa45",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "x": 110,
        "y": 120,
        "wires": [
            [
                "71e505724b4a62bc"
            ]
        ]
    },
    {
        "id": "4383db249d30935b",
        "type": "ha-text",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "点击日期",
        "version": 1,
        "debugenabled": false,
        "inputs": 0,
        "outputs": 1,
        "entityConfig": "0127accfa1f097fd",
        "exposeAsEntityConfig": "",
        "mode": "listen",
        "value": "payload",
        "valueType": "msg",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "value"
            },
            {
                "property": "previousValue",
                "propertyType": "msg",
                "value": "",
                "valueType": "previousValue"
            }
        ],
        "x": 640,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "71e505724b4a62bc",
        "type": "function",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "更新日期",
        "func": "var now_solar_time = Lunar.Solar.fromDate(new Date());                            //今天-阳历时间戳\nvar now_solar_year = \"\" + now_solar_time.getYear();                               //今天-阳历年\nvar now_solar_month = (\"0\" + now_solar_time.getMonth()).slice(-2);                //今天-阳历月\nvar now_solar_day = (\"0\" + now_solar_time.getDay()).slice(-2);                    //今天-阳历日\nvar now_solar_date = now_solar_year + \"-\" + now_solar_month + \"-\" + now_solar_day;\n\n\nvar outputMsg = {\n    \"date\": now_solar_date\n};\nreturn outputMsg;\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "Lunar",
                "module": "lunar-javascript"
            }
        ],
        "x": 420,
        "y": 120,
        "wires": [
            [
                "596d64b6a293efb7"
            ]
        ]
    },
    {
        "id": "b97fe535f42d4d04",
        "type": "inject",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "初始化日期+凌晨重置今天",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "01 00 * * *",
        "once": true,
        "onceDelay": "1",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "71e505724b4a62bc"
            ]
        ]
    },
    {
        "id": "596d64b6a293efb7",
        "type": "api-call-service",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "更新日期",
        "server": "d5d3e351.02443",
        "version": 7,
        "debugenabled": false,
        "action": "text.set_value",
        "floorId": [],
        "areaId": [],
        "deviceId": [],
        "entityId": [
            "text.lunar_ri_qi"
        ],
        "labelId": [],
        "data": "{\"value\": \"{{date}}\"}",
        "dataType": "json",
        "mergeContext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "blockInputOverrides": true,
        "domain": "text",
        "service": "set_value",
        "x": 640,
        "y": 360,
        "wires": [
            [
                "abb942190509f761"
            ]
        ],
        "info": "action  要保证 text.set_value"
    },
    {
        "id": "c986ddd21546ed04",
        "type": "function",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "更新日期",
        "func": "var before_year = msg.date.slice(0, 4);\nvar before_month = msg.date.slice(5, 7);\nvar before_day = msg.date.slice(8, 10);\nvar runnian = Lunar.SolarUtil.isLeapYear(before_year);\nvar after_year = \"\";\nvar after_month = \"\";\nvar after_day = \"\";\n\nif (before_month == \"01\") {\n    after_year = before_year;\n    after_month = \"02\";\n    if (Number(before_day) >= 29 && runnian == 0) after_day = '28';\n    if (Number(before_day) >= 29 && runnian == 1) after_day = '29';\n    if (Number(before_day) < 29) after_day = before_day;\n}\nif (before_month == \"02\") {\n    after_year = before_year;\n    after_month = \"03\";\n    after_day = before_day;\n}\nif (before_month == \"03\") {\n    after_year = before_year;\n    after_month = \"04\";\n    if (before_day == '31') after_day = '30';\n    if (before_day != '31') after_day = before_day;\n}\nif (before_month == \"04\") {\n    after_year = before_year;\n    after_month = \"05\";\n    after_day = before_day;\n}\nif (before_month == \"05\") {\n    after_year = before_year;\n    after_month = \"06\";\n    if (before_day == '31') after_day = '30';\n    if (before_day != '31') after_day = before_day;\n}\nif (before_month == \"06\") {\n    after_year = before_year;\n    after_month = \"07\";\n    after_day = before_day;\n}\nif (before_month == \"07\") {\n    after_year = before_year;\n    after_month = \"08\";\n    after_day = before_day;\n}\nif (before_month == \"08\") {\n    after_year = before_year;\n    after_month = \"09\";\n    if (before_day == '31') after_day = '30';\n    if (before_day != '31') after_day = before_day;\n}\nif (before_month == \"09\") {\n    after_year = before_year;\n    after_month = \"10\";\n    after_day = before_day;\n}\nif (before_month == \"10\") {\n    after_year = before_year;\n    after_month = \"11\";\n    if (before_day == '31') after_day = '30';\n    if (before_day != '31') after_day = before_day;\n}\nif (before_month == \"11\") {\n    after_year = before_year;\n    after_month = \"12\";\n    after_day = before_day;\n}\nif (before_month == \"12\" ) {\n    after_year = Number(before_year) +1;\n    after_month = \"01\";\n    after_day = before_day;\n}\n\nvar date = after_year + \"-\" + after_month + \"-\" + after_day;\n\nvar outputMsg = {\n    \"date\": date\n};\nreturn outputMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "Lunar",
                "module": "lunar-javascript"
            }
        ],
        "x": 420,
        "y": 360,
        "wires": [
            [
                "596d64b6a293efb7"
            ]
        ]
    },
    {
        "id": "ee75f8d1072a9ff5",
        "type": "api-current-state",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "获取日期",
        "server": "d5d3e351.02443",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "text.lunar_ri_qi",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "date",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 260,
        "y": 360,
        "wires": [
            [
                "c986ddd21546ed04"
            ]
        ]
    },
    {
        "id": "ffb89e84d38e0a20",
        "type": "api-current-state",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "获取日期",
        "server": "d5d3e351.02443",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "text.lunar_ri_qi",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "date",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 260,
        "y": 180,
        "wires": [
            [
                "aaea7af5a1e46430"
            ]
        ]
    },
    {
        "id": "6bc4675c76413538",
        "type": "api-current-state",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "获取日期",
        "server": "d5d3e351.02443",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "text.lunar_ri_qi",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "date",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 260,
        "y": 240,
        "wires": [
            [
                "fac00e4310bbfd13"
            ]
        ]
    },
    {
        "id": "ede35cb31d84b2a9",
        "type": "api-current-state",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "获取日期",
        "server": "d5d3e351.02443",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "text.lunar_ri_qi",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "date",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 260,
        "y": 300,
        "wires": [
            [
                "5b84e6e8512e2846"
            ]
        ]
    },
    {
        "id": "5b84e6e8512e2846",
        "type": "function",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "更新日期",
        "func": "var before_year = msg.date.slice(0, 4);\nvar before_month = msg.date.slice(5, 7);\nvar before_day = msg.date.slice(8, 10);\nvar runnian = Lunar.SolarUtil.isLeapYear(before_year);\nvar after_year = \"\";\nvar after_month = \"\";\nvar after_day = \"\";\n\nif (before_month == \"01\") {\n    after_year = Number(before_year) -1;\n    after_month = \"12\";\n    after_day = before_day;\n}\nif (before_month == \"02\") {\n    after_year = before_year;\n    after_month = \"01\";\n    after_day = before_day;\n}\nif (before_month == \"03\") {\n    after_year = before_year;\n    after_month = \"02\";\n    if (Number(before_day) >= 29 && runnian == 0) after_day = '28';\n    if (Number(before_day) >= 29 && runnian == 1) after_day = '29';\n    if (Number(before_day) < 29 ) after_day = before_day;\n}\nif (before_month == \"04\") {\n    after_year = before_year;\n    after_month = \"03\";\n    after_day = before_day;\n}\nif (before_month == \"05\") {\n    after_year = before_year;\n    after_month = \"04\";\n    if (before_day == '31') after_day = '30';\n    if (before_day != '31') after_day = before_day;\n}\nif (before_month == \"06\") {\n    after_year = before_year;\n    after_month = \"05\";\n    after_day = before_day;\n}\nif (before_month == \"07\") {\n    after_year = before_year;\n    after_month = \"06\";\n    if (before_day == '31') after_day = '30';\n    if (before_day != '31') after_day = before_day;\n}\nif (before_month == \"08\") {\n    after_year = before_year;\n    after_month = \"07\";\n    after_day = before_day;\n}\nif (before_month == \"09\") {\n    after_year = before_year;\n    after_month = \"08\";\n    after_day = before_day;\n}\nif (before_month == \"10\") {\n    after_year = before_year;\n    after_month = \"09\";\n    if (before_day == '31') after_day = '30';\n    if (before_day != '31') after_day = before_day;\n}\nif (before_month == \"11\") {\n    after_year = before_year;\n    after_month = \"10\";\n    after_day = before_day;\n}\nif (before_month == \"12\" ) {\n    after_year = before_year;\n    after_month = \"11\";\n    if (before_day == '31') after_day = '30';\n    if (before_day != '31') after_day = before_day;\n}\n\nvar date = after_year + \"-\" + after_month + \"-\" + after_day;\n\nvar outputMsg = {\n    \"date\": date\n};\nreturn outputMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "Lunar",
                "module": "lunar-javascript"
            }
        ],
        "x": 420,
        "y": 300,
        "wires": [
            [
                "596d64b6a293efb7"
            ]
        ]
    },
    {
        "id": "aaea7af5a1e46430",
        "type": "function",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "更新日期",
        "func": "var before_year = msg.date.slice(0, 4);\nvar before_month = msg.date.slice(5, 7);\nvar before_day = msg.date.slice(8, 10);\nvar runnian = Lunar.SolarUtil.isLeapYear(Number(before_year) + 1);\nvar after_year = \"\";\nvar after_month = \"\";\nvar after_day = \"\";\n\n\nif (before_month == \"02\") {\n    after_year = Number(before_year) - 1;\n    after_month = before_month;\n    if (Number(before_day) >= 29 && runnian == 0) after_day = '28';\n    if (Number(before_day) < 29 ) after_day = before_day;\n}\nif (before_month != \"02\") {\n    after_year = Number(before_year) -1;\n    after_month = before_month;\n    after_day = before_day;\n}\n\nvar date = after_year + \"-\" + after_month + \"-\" + after_day;\n\nvar outputMsg = {\n    \"date\": date\n};\nreturn outputMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "Lunar",
                "module": "lunar-javascript"
            }
        ],
        "x": 420,
        "y": 180,
        "wires": [
            [
                "596d64b6a293efb7"
            ]
        ]
    },
    {
        "id": "fac00e4310bbfd13",
        "type": "function",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "更新日期",
        "func": "var before_year = msg.date.slice(0, 4);\nvar before_month = msg.date.slice(5, 7);\nvar before_day = msg.date.slice(8, 10);\nvar runnian = Lunar.SolarUtil.isLeapYear(Number(before_year) +1);\nvar after_year = \"\";\nvar after_month = \"\";\nvar after_day = \"\";\n\n\nif (before_month == \"02\") {\n    after_year = Number(before_year) + 1;\n    after_month = before_month;\n    if (Number(before_day) >= 29 && runnian == 0) after_day = '28';\n    if (Number(before_day) < 29) after_day = before_day;\n}\nif (before_month != \"02\") {\n    after_year = Number(before_year) + 1;\n    after_month = before_month;\n    after_day = before_day;\n}\n\nvar date = after_year + \"-\" + after_month + \"-\" + after_day;\n\nvar outputMsg = {\n    \"date\": date\n};\nreturn outputMsg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "Lunar",
                "module": "lunar-javascript"
            }
        ],
        "x": 420,
        "y": 240,
        "wires": [
            [
                "596d64b6a293efb7"
            ]
        ]
    },
    {
        "id": "ba25fb7a0d76fdc6",
        "type": "api-current-state",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "获取日期",
        "server": "d5d3e351.02443",
        "version": 3,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "text.lunar_ri_qi",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "date",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            }
        ],
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 260,
        "y": 420,
        "wires": [
            [
                "332684eb89e75cd5"
            ]
        ]
    },
    {
        "id": "04b64d4aaf049959",
        "type": "function",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "更新实体",
        "func": "/*-----------------------计算今日日期--阳历------------------------*/\nvar now_solar_time = Lunar.Solar.fromDate(new Date());                            //今天-阳历时间戳\nvar now_solar_year = \"\" + now_solar_time.getYear();                               //今天-阳历年\nvar now_solar_month = (\"0\" + now_solar_time.getMonth()).slice(-2);                //今天-阳历月\nvar now_solar_day = (\"0\" + now_solar_time.getDay()).slice(-2);                    //今天-阳历日\nvar now_solar_week = now_solar_time.getWeekInChinese();        \nvar now_solar_date = now_solar_year + \"-\" + now_solar_month + \"-\" + now_solar_day;  //今天-阳历星期\nvar Now_solar={\n    说明: \"今日阳历信息\",\n    年: now_solar_year,\n    月: now_solar_month,\n    日: now_solar_day,\n    星期A: \"星期\" + now_solar_week,\n    星期B: \"周\" + now_solar_week,\n    日期A: now_solar_month + \"月\" + now_solar_day + \"日\",\n    日期B: now_solar_year + \"-\" + now_solar_month + \"-\" + now_solar_day,\n    日期C: now_solar_year + \"年\" + now_solar_month + \"月\" + now_solar_day + \"日\",\n    星座: now_solar_time.getXingZuo() + \"座\",\n};\n\n/*-----------------------计算今日日期--农历-----------------------*/\nvar now_lunar_time = Lunar.Lunar.fromDate(new Date());                                            //今天-农历时间戳\nvar now_lunar_year = now_lunar_time.getYearInGanZhi() + now_lunar_time.getYearShengXiao() + \"年\"; //今天-农历年                                  //今天-农历年\nvar now_lunar_month = now_lunar_time.getMonthInChinese();                                         //今天-农历月\nvar now_lunar_day = now_lunar_time.getDayInChinese();          \nvar now_lunar_shuju=\"\";\nif (now_lunar_time.getShuJiu()){ \n    now_lunar_shuju = now_lunar_time.getShuJiu().getName() + \" 第\" + now_lunar_time.getShuJiu().getIndex() + \"天\";\n} \nvar now_lunar_fu = \"\";\nif (now_lunar_time.getFu()) {\n    now_lunar_fu = now_lunar_time.getFu().getName() + \" 第\" + now_lunar_time.getFu().getIndex() + \"天\";\n}\nvar Now_lunar = {\n    说明: \"今日农历信息\",\n    年: now_lunar_year,\n    日期: now_lunar_month + \"月\" + now_lunar_day,\n    数九: now_lunar_shuju,\n    三伏: now_lunar_fu,\n};\n\n/*-----------------------计算点击的日期--阳历--------------------------*/\nvar tap_dateTime = msg.date + \"T00:00:00\";                           //获取点击后的日期,拼接成时间戳\nvar tap_solar_time = Lunar.Solar.fromDate(new Date(tap_dateTime));   //获取点击后的农历日期\nvar tap_solar_year = \"\" + tap_solar_time.getYear();                               //今天-阳历年\nvar tap_solar_month = (\"0\" + tap_solar_time.getMonth()).slice(-2);                //今天-阳历月\nvar tap_solar_day = (\"0\" + tap_solar_time.getDay()).slice(-2);                    //今天-阳历日\nvar tap_solar_week = tap_solar_time.getWeekInChinese();                           //今天-阳历星期\nvar Tap_solar = {\n    说明: \"点击阳历信息\",\n    年: tap_solar_year,\n    月: tap_solar_month,\n    日: tap_solar_day,\n    星期A: \"星期\" + tap_solar_week,\n    星期B: \"周\" + tap_solar_week,\n    日期A: tap_solar_month + \"月\" + tap_solar_day + \"日\",\n    日期B: tap_solar_year + \"-\" + tap_solar_month + \"-\" + tap_solar_day,\n    日期C: tap_solar_year + \"年\" + tap_solar_month + \"月\" + tap_solar_day + \"日\",\n    星座: tap_solar_time.getXingZuo() + \"座\",\n};\n\n/*-----------------------计算点击的日期--农历--------------------------*/\nvar tap_lunar_time = Lunar.Lunar.fromDate(new Date(tap_dateTime));   //获取点击后的阳历日期\nvar tap_lunar_year = tap_lunar_time.getYearInGanZhi() + tap_lunar_time.getYearShengXiao() + \"年\"; //今天-农历年                                  //今天-农历年\nvar tap_lunar_month = tap_lunar_time.getMonthInChinese();                                         //今天-农历月\nvar tap_lunar_day = tap_lunar_time.getDayInChinese();   \nvar tap_lunar_shuju = \"\";\nif (tap_lunar_time.getShuJiu()){  \n    tap_lunar_shuju = tap_lunar_time.getShuJiu().getName() + \" 第\" + tap_lunar_time.getShuJiu().getIndex() + \"天\";\n} \nvar tap_lunar_fu = \"\";\nif (tap_lunar_time.getFu()) {\n    tap_lunar_fu = tap_lunar_time.getFu().getName() + \" 第\" + tap_lunar_time.getFu().getIndex() + \"天\";\n}\nvar Tap_lunar = {\n    说明: \"点击农历信息\",\n    年: tap_lunar_year,\n    日期: tap_lunar_month + \"月\" + tap_lunar_day,\n    数九: tap_lunar_shuju,\n    三伏: tap_lunar_fu,\n};\n\n/*-------计算点击日期的，日历数组（包括农历数组、农历文本数组、节日数日、节气数组、假期数组）--------------*/\nvar tap_year = msg.date.slice(0, 4);                                    //获取模拟实体得年\nvar tap_month = msg.date.slice(5, 7);                                //获取模拟实体得月\nvar isrunnian = Lunar.SolarUtil.isLeapYear(tap_year);                  //是否闰年 \nvar tap_month_sum_last = 1, tap_month_sum = 1;                               //上月天数，本月天数\nif (tap_month == \"01\") tap_month_sum_last = 31, tap_month_sum = 31;\nif (tap_month == \"02\" && isrunnian == 1) tap_month_sum_last = 31, tap_month_sum = 29;\nif (tap_month == \"02\" && isrunnian == 0) tap_month_sum_last = 31, tap_month_sum = 28;\nif (tap_month == \"03\" && isrunnian == 1) tap_month_sum_last = 29, tap_month_sum = 31;\nif (tap_month == \"03\" && isrunnian == 0) tap_month_sum_last = 28, tap_month_sum = 31;\nif (tap_month == \"04\") tap_month_sum_last = 31, tap_month_sum = 30;\nif (tap_month == \"05\") tap_month_sum_last = 30, tap_month_sum = 31;\nif (tap_month == \"06\") tap_month_sum_last = 31, tap_month_sum = 30;\nif (tap_month == \"07\") tap_month_sum_last = 30, tap_month_sum = 31;\nif (tap_month == \"08\") tap_month_sum_last = 31, tap_month_sum = 31;\nif (tap_month == \"09\") tap_month_sum_last = 31, tap_month_sum = 30;\nif (tap_month == \"10\") tap_month_sum_last = 30, tap_month_sum = 31;\nif (tap_month == \"11\") tap_month_sum_last = 31, tap_month_sum = 30;\nif (tap_month == \"12\") tap_month_sum_last = 30, tap_month_sum = 31;    \nvar tap_month_01 = tap_year + \"-\" + tap_month + \"-01T00:00:00\";           //点击年-点击月-1号的id\nvar tap_month_01_time = Lunar.Lunar.fromDate(new Date(tap_month_01));     //点击年-点击月-1号的日期\nvar tapweek1id = tap_month_01_time.getWeek();                             //点击年-点击月-1号是周几\nif (tapweek1id == 0) tapweek1id = 7;                                      //点击年-点击月-1号是周几\nvar tap_new_dateTime = \"\";                                                   //初始化变量\nvar zhengfu = \"\", day_label = \"\", month_label = \"\", day = 0, month = 0, year = 0;\nvar Solarday_num = [];   //阳历数组\nvar Lunarday_num = [];   //农历数组\nvar Lunar_label = [];   //农历文本\nvar Jieqi_label = [];   //节气文本\nvar Jiaqi_label = [];   //假期文本\nvar Jieri_label_lunar = [];  //农历节日文本\nvar Jieri_label_solar = [];  //阳历节日文本\n//循环上面定义的数组，6*7=共42个格子的数组\nfor (var id = 0; id <= 42; id++) {\n        if (id - tapweek1id >= 0 && id - tapweek1id < tap_month_sum){\n            year = tap_year,\n            month = tap_month,\n            day = id - tapweek1id + 1,\n            day_label = (\"0\" + day).slice(-2),\n            month_label = (\"0\" + month).slice(-2),\n            zhengfu = \"-2\",\n            Solarday_num[id] = year +\"-\"+ month_label +\"-\"+  day_label + zhengfu;\n        }\n        if (id - tapweek1id < 0 && tap_month > 1){\n            year = tap_year,\n            month = tap_month - 1,\n            day = id - tapweek1id + 1+ tap_month_sum_last,\n            day_label = (\"0\" + day).slice(-2),\n            month_label = (\"0\" + month).slice(-2),\n            zhengfu = \"-1\",\n            Solarday_num[id] = year + \"-\" + month_label + \"-\" + day_label + zhengfu;\n        }\n        if (id - tapweek1id < 0 && tap_month == 1){\n            year = tap_year - 1,\n            day = id - tapweek1id +1 + tap_month_sum_last,\n            day_label = (\"0\" + day).slice(-2),\n            month_label = \"12\",\n            zhengfu = \"-1\",\n            Solarday_num[id] = year + \"-\" + month_label + \"-\" + day_label + zhengfu;\n        }\n        if (id - tapweek1id >= tap_month_sum && tap_month < 12) {\n            year = tap_year,\n            month = tap_month - (-1),\n            day = id - tapweek1id - tap_month_sum + 1,\n            day_label = (\"0\" + day).slice(-2),\n            month_label = (\"0\" + month).slice(-2),\n            zhengfu = \"-3\",\n            Solarday_num[id] = year + \"-\" + month_label + \"-\" + day_label + zhengfu;\n        }\n        if (id - tapweek1id >= tap_month_sum && tap_month == 12) {\n            year = tap_year - (-1),\n            day = id - tapweek1id - tap_month_sum + 1,\n            day_label = (\"0\" + day).slice(-2),\n            month_label = \"01\",\n            zhengfu = \"-3\",\n            Solarday_num[id] = year + \"-\" + month_label + \"-\" + day_label + zhengfu;\n        }\n        tap_new_dateTime = year + \"-\" + month_label + \"-\" + day_label + \"T00:00:00\";\n        var lunarid = Lunar.Lunar.fromDate(new Date(tap_new_dateTime));  //获取点击数后的函数头\n        var solarid = Lunar.Solar.fromDate(new Date(tap_new_dateTime));  //获取点击数后的函数头\n        Jieqi_label[id] = lunarid.getJieQi();\n        Lunar_label[id] = lunarid.getMonthInChinese() +\"月\"+ lunarid.getDayInChinese();\n        Jieri_label_lunar[id] = lunarid.getFestivals()[0]; \n        Jieri_label_solar[id] = solarid.getFestivals()[0]; \n\n        var yy= lunarid.getYear();\n        var mm=(\"0\" + lunarid.getMonth()).slice(-2);\n        var dd = (\"0\" + lunarid.getDay()).slice(-2);\n        var lunarsum = Lunar.LunarMonth.fromYm(yy, mm)\n\n        Lunarday_num[id] = mm + dd + lunarsum.getDayCount();\n        var d1 = year + \"-\" + month_label + \"-\" + day_label;\n        var d2 = Lunar.HolidayUtil.getHoliday(d1);\n        if (d2 != null) {\n            Jiaqi_label[id] = d2.isWork();\n        }\n}\n\n//计算今天的时辰吉凶的 干支、吉凶数据\nvar ganzi1 = Lunar.Lunar.fromDate(new Date(msg.date + \"T00:30:00\")).getTimeInGanZhi();\nvar ganzi2 = Lunar.Lunar.fromDate(new Date(msg.date + \"T02:00:00\")).getTimeInGanZhi();\nvar ganzi3 = Lunar.Lunar.fromDate(new Date(msg.date + \"T04:00:00\")).getTimeInGanZhi();\nvar ganzi4 = Lunar.Lunar.fromDate(new Date(msg.date + \"T06:00:00\")).getTimeInGanZhi();\nvar ganzi5 = Lunar.Lunar.fromDate(new Date(msg.date + \"T08:00:00\")).getTimeInGanZhi();\nvar ganzi6 = Lunar.Lunar.fromDate(new Date(msg.date + \"T10:00:00\")).getTimeInGanZhi();\nvar ganzi7 = Lunar.Lunar.fromDate(new Date(msg.date + \"T12:00:00\")).getTimeInGanZhi();\nvar ganzi8 = Lunar.Lunar.fromDate(new Date(msg.date + \"T14:00:00\")).getTimeInGanZhi();\nvar ganzi9 = Lunar.Lunar.fromDate(new Date(msg.date + \"T16:00:00\")).getTimeInGanZhi();\nvar ganzi10 = Lunar.Lunar.fromDate(new Date(msg.date + \"T18:00:00\")).getTimeInGanZhi();\nvar ganzi11 = Lunar.Lunar.fromDate(new Date(msg.date + \"T20:00:00\")).getTimeInGanZhi();\nvar ganzi12 = Lunar.Lunar.fromDate(new Date(msg.date + \"T22:00:00\")).getTimeInGanZhi();\nvar ganzi13 = Lunar.Lunar.fromDate(new Date(msg.date + \"T23:30:00\")).getTimeInGanZhi();\nvar luck1 = Lunar.Lunar.fromDate(new Date(msg.date + \"T00:30:00\")).getTimeTianShenLuck();\nvar luck2 = Lunar.Lunar.fromDate(new Date(msg.date + \"T02:00:00\")).getTimeTianShenLuck();\nvar luck3 = Lunar.Lunar.fromDate(new Date(msg.date + \"T04:00:00\")).getTimeTianShenLuck();\nvar luck4 = Lunar.Lunar.fromDate(new Date(msg.date + \"T06:00:00\")).getTimeTianShenLuck();\nvar luck5 = Lunar.Lunar.fromDate(new Date(msg.date + \"T08:00:00\")).getTimeTianShenLuck();\nvar luck6 = Lunar.Lunar.fromDate(new Date(msg.date + \"T10:00:00\")).getTimeTianShenLuck();\nvar luck7 = Lunar.Lunar.fromDate(new Date(msg.date + \"T12:00:00\")).getTimeTianShenLuck();\nvar luck8 = Lunar.Lunar.fromDate(new Date(msg.date + \"T14:00:00\")).getTimeTianShenLuck();\nvar luck9 = Lunar.Lunar.fromDate(new Date(msg.date + \"T16:00:00\")).getTimeTianShenLuck();\nvar luck10 = Lunar.Lunar.fromDate(new Date(msg.date + \"T18:00:00\")).getTimeTianShenLuck();\nvar luck11 = Lunar.Lunar.fromDate(new Date(msg.date + \"T20:00:00\")).getTimeTianShenLuck();\nvar luck12 = Lunar.Lunar.fromDate(new Date(msg.date + \"T22:00:00\")).getTimeTianShenLuck();\nvar luck13 = Lunar.Lunar.fromDate(new Date(msg.date + \"T23:30:00\")).getTimeTianShenLuck();\n\n//计算机器相关节气\nvar dateLastjieqi = tap_lunar_time.getPrevJieQi().getSolar().toYmd();\ndateLastjieqi = new Date(dateLastjieqi);\nvar lunarLastjieqi = Lunar.Lunar.fromDate(dateLastjieqi);\nvar dateNextjieqi = tap_lunar_time.getNextJieQi().getSolar().toYmd();\ndateNextjieqi = new Date(dateNextjieqi);\nvar lunarNextjieqi = Lunar.Lunar.fromDate(dateNextjieqi);\nvar lastjieqi = tap_lunar_time.getPrevJieQi() + \": \" + tap_lunar_time.getPrevJieQi().getSolar().toYmd() + \" 周\" + lunarLastjieqi.getWeekInChinese();\nvar nextjieqi = tap_lunar_time.getNextJieQi() + \": \" + tap_lunar_time.getNextJieQi().getSolar().toYmd() + \" 周\" + lunarNextjieqi.getWeekInChinese();\nvar last_jieqi = now_lunar_time.getPrevJieQi();\nvar last_jieqi_date = last_jieqi.getSolar().toYmd();\nvar jieqiyy = last_jieqi_date.slice(0, 4);\nvar jieqimm = last_jieqi_date.slice(5, 7);\nvar jieqidd = last_jieqi_date.slice(8, 10);\nvar last = Lunar.Solar.fromYmd(jieqiyy, jieqimm, jieqidd)\nvar now = Lunar.Solar.fromYmd(now_solar_year, now_solar_month, now_solar_day)\nvar num = now.subtract(last);\nvar Jieqi = {\n    节气: last_jieqi + \" 第\" + num + \"天\",\n    上一节气: lastjieqi,\n    下一节气: nextjieqi,\n};\n\n/*计算生日相关 */\nvar Shengri = msg.Shengri;\n//计算阳历生日和纪念日距离天数\nfor (var shengid = 0; shengid < Shengri.length; shengid++) {     \n    if (Shengri[shengid].阳历 != \"\") {  \n        var next_year = Number(now_solar_year) + 1;\n        var runnian1 = Lunar.SolarUtil.isLeapYear(now_solar_year);\n        var runnian2 = Lunar.SolarUtil.isLeapYear(next_year);  \n        var year1 = now_solar_year;\n        var year2 = next_year;\n        var month1 = Shengri[shengid].阳历.slice(0, 2);\n        var day1 = Shengri[shengid].阳历.slice(-2);\n        if (runnian1 == 1 && Shengri[shengid].阳历 == \"0229\") day1 = \"29\";\n        if (runnian1 == 0 && Shengri[shengid].阳历 == \"0229\") day1 = \"28\";\n        var day2 = Shengri[shengid].阳历.slice(-2);\n        if (runnian2 == 1 && Shengri[shengid].阳历 == \"0229\") day2 = \"29\";\n        if (runnian2 == 0 && Shengri[shengid].阳历 == \"0229\") day2 = \"28\";\n        var shengri_date1 = Lunar.Solar.fromYmd(year1, month1, day1)   //今年生日 2025,05,21\n        var shengri_date2 = Lunar.Solar.fromYmd(year2, month1, day2)   //明年生日 2026,05,21\n        var now_date = Lunar.Solar.fromYmd(now_solar_year, now_solar_month, now_solar_day)       //现在时间 2025-03-18\n        var num1 = shengri_date1.subtract(now_date);\n        var num2 = shengri_date2.subtract(now_date);\n        if (num1 > 0) {\n            Shengri[shengid].阳历天数 = num1;\n            Shengri[shengid].阳历天数说明 = Shengri[shengid].名称 + \" 还有\" + num1 + \"天\";\n        }\n        if (num1 < 0){ \n            Shengri[shengid].阳历天数 = num2;\n            Shengri[shengid].阳历天数说明 = Shengri[shengid].名称 + \" 还有\" + num2 + \"天\";\n        }\n        if (num1 == 0) {\n            Shengri[shengid].阳历天数 = 0;\n            Shengri[shengid].阳历天数说明 = Shengri[shengid].名称 ;\n        }\n    }\n}\n//计算农历生日和纪念日距离天数\nfor (var nongliid = 0; nongliid < Shengri.length; nongliid++) {\n   if (Shengri[nongliid].农历 != \"\") {\n        var year1 = now_lunar_time.getYear();\n        var year2 = Number(year1) + 1;\n        var month1 = Shengri[nongliid].农历.slice(0, 2);\n        var lunarMonth1 = Lunar.LunarMonth.fromYm(year1, month1).getDayCount();\n        var lunarMonth2 = Lunar.LunarMonth.fromYm(year2, month1).getDayCount();\n        var day1 = Shengri[nongliid].农历.slice(-2);\n        if (lunarMonth1 == 29 && Shengri[nongliid].农历.slice(-2) == \"30\") {day1 = \"29\";}\n        var day2 = Shengri[nongliid].农历.slice(-2);\n        if (lunarMonth2 == 29 && Shengri[nongliid].农历.slice(-2) == \"30\") {day2 = \"29\";}\n        var lunar1 = Lunar.Lunar.fromYmd(year1,month1,day1);\n        var lunar2 = Lunar.Lunar.fromYmd(year2,month1,day2);\n        var solor1 = lunar1.getSolar().toString();\n        var solor2 = lunar2.getSolar().toString();\n        var a1 = solor1.slice(0, 4), a2 = solor1.slice(5, 7), a3 = solor1.slice(8, 10);\n        var b1 = solor2.slice(0, 4), b2 = solor2.slice(5, 7), b3 = solor2.slice(8, 10);\n        var shengri_date1 = Lunar.Solar.fromYmd(a1,a2,a3)   //今年生日 2025,05,21\n        var shengri_date2 = Lunar.Solar.fromYmd(b1,b2,b3)    //明年生日 2026,05,21\n        var now_date = Lunar.Solar.fromYmd(now_solar_year, now_solar_month, now_solar_day)       //现在时间 2025-03-18\n        var num1 = shengri_date1.subtract(now_date);\n        var num2 = shengri_date2.subtract(now_date);\n        if (num1 > 0) {\n            Shengri[nongliid].农历天数 = num1;\n            Shengri[nongliid].农历天数说明 = Shengri[nongliid].名称 + \" 还有\" + num1 + \"天\";\n        }\n        if (num1 < 0) {\n            Shengri[nongliid].农历天数 = num2;\n            Shengri[nongliid].农历天数说明 = Shengri[nongliid].名称 + \" 还有\" + num2 + \"天\";\n        }\n        if (num1 == 0) {\n            Shengri[nongliid].农历天数 = 0;\n            Shengri[nongliid].农历天数说明 = Shengri[nongliid].名称;\n        }\n    }\n}\n\n///计算最近的生日和纪念日\nvar daymins1 = [];\nfor (let i = 0; i < Shengri.length; i++) {\n    if (Number(Shengri[i].阳历天数) >= 0) daymins1[i] = Shengri[i].阳历天数;\n    if (Number(Shengri[i].农历天数) >= 0) daymins1[i + 10] = Shengri[i].农历天数;\n}\nvar daymins2 = daymins1.filter(item => item !== \"\"); \nvar min = daymins2[0];\nfor (let j = 0; j < 2*Shengri.length; j++) {\n    if (daymins2[j] < min) {\n        min = daymins2[j];\n  }\n}\nfor (let k = 0; k < Shengri.length; k++) {\n    if (Shengri[k].阳历天数 == min) var shengrilabel = Shengri[k].阳历天数说明;\n    if (Shengri[k].农历天数 == min) var shengrilabel = Shengri[k].农历天数说明;\n}\n\n//清理生日空白数据\nvar Shengrinew = Shengri\n    .filter(entry => {\n        const hasValidName = entry.名称 && entry.名称.trim() !== '';\n        const hasSolarInfo = entry.阳历.trim() !== '' || !isNaN(parseInt(entry.阳历天数, 10));\n        const hasLunarInfo = entry.农历.trim() !== '' || !isNaN(parseInt(entry.农历天数, 10));\n        return hasValidName && (hasSolarInfo || hasLunarInfo);\n        });\n\n// 将生日接近天数排序并生成数组\nvar Shengrinum = Shengri\n    .filter(item => item.名称 && (item.阳历天数 || item.农历天数))\n    .map(item => ({\n        days: parseInt(item.阳历天数 || item.农历天数, 10), // 优先取阳历天数\n        message: item.阳历天数 ? item.阳历天数说明 : item.农历天数说明\n    }))\n    .sort((a, b) => a.days - b.days)\n    .map(item => item.message);\n\n///计算最近60天的阳历+农历节日\nvar jieriware1 = [], jieriware2 = [], Jieriware = [];\nfor (let ii = 0; ii < 100; ii=ii+2) {\n    jieriware1[ii] = now_solar_time.next(ii/2).toString() + now_solar_time.next(ii/2).getFestivals()[0];\n    jieriware1[ii+1] = now_lunar_time.next(ii/2).toString() + now_lunar_time.next(ii/2).getFestivals()[0];\n}\nvar jieriware3 = jieriware1.filter(item => !item.endsWith(\"undefined\"));\n//农历中文转换数字函数\nfunction convertDateByRules(str) {\n    // 定义转换规则\n    const numbers1 = { '〇': 0, '一': 1, '二': 2, '三': 3, '四': 4, '五': 5, '六': 6, '七': 7, '八': 8, '九': 9, '十': 10 };\n    const numbers2 = { '〇': 0, '一': 1, '二': 2, '三': 3, '四': 4, '五': 5, '六': 6, '七': 7, '八': 8, '九': 9, '十': 10, '冬': 11, '腊': 12 };\n    const numbers3 = { '初': 0, '十': 1, '廿': 2, '三': 3 };\n    const numbers4 = { '一': 1, '二': 2, '三': 3, '四': 4, '五': 5, '六': 6, '七': 7, '八': 8, '九': 9, '十': 0 };\n    const chars = str.split('');\n    const year = chars.slice(0, 4).map(c => {\n        return numbers1[c];\n    }).join('');\n    const month = numbers2[chars[5]];\n    const dayPrefix = numbers3[chars[7]];\n    const daySuffix = numbers4[chars[8]];\n    const day = dayPrefix * 10 + (dayPrefix === 0 ? daySuffix :\n        dayPrefix === 3 ? 30 : // 处理三十\n            daySuffix === 0 ? 10 : // 处理十\n                daySuffix);\n    return [\n        year.padStart(4, '0'),\n        month.toString().padStart(2, '0'),\n        day.toString().padStart(2, '0')\n    ].join('');\n}\nfor (let jj = 0; jj < jieriware3.length; jj++) {\n    if(jieriware3[jj].slice(0,1)==\"二\"){\n         var date = convertDateByRules(jieriware3[jj].slice(0,9));\n         var yearjjj= date.slice(0,4);\n         var monthjjj= date.slice(4,6);\n         var dayjjj= date.slice(6,8);\n         var solardate = Lunar.Lunar.fromYmd(yearjjj, monthjjj, dayjjj).getSolar().toString();\n        jieriware3[jj] = solardate + jieriware3[jj].slice(9);\n    }\n}\nfor (let kk = 0; kk < jieriware3.length; kk++) {\n        var yearkk = jieriware3[kk].slice(0,4);\n        var monthkk = jieriware3[kk].slice(5,7);\n        var daykk = jieriware3[kk].slice(8,10);\n        var datekk = Lunar.Solar.fromYmd(yearkk,monthkk,daykk)    //明年生日 2026,05,21\n        var now_date = Lunar.Solar.fromYmd(now_solar_year, now_solar_month, now_solar_day)       //现在时间 2025-03-18\n        var numkk = datekk.subtract(now_date);\n        if (numkk ==0){\n            Jieriware[kk] = jieriware3[kk].slice(10);\n        }\n        if (numkk > 0){\n            Jieriware[kk] = jieriware3[kk].slice(10) + \" \" + numkk + \"天\";\n        }\n}\nvar Shengriwarn ={\n    最近的生日: Shengrinum,\n    最近的节日: Jieriware,\n}\n\n//定义老黄历内容\nvar Huangli = {\n    \"干支\": {\n        年: tap_lunar_time.getYearInGanZhi(),\n        月: tap_lunar_time.getMonthInGanZhi(),\n        日: tap_lunar_time.getDayInGanZhi()\n    },\n    \"生肖\": {\n        年: tap_lunar_time.getYearShengXiao(),\n        月: tap_lunar_time.getMonthShengXiao(),\n        日: tap_lunar_time.getDayShengXiao()\n    },\n    \"纳音\": {\n        年: tap_lunar_time.getYearNaYin(),\n        月: tap_lunar_time.getMonthNaYin(),\n        日: tap_lunar_time.getDayNaYin()\n    },\n    \"旬空\": {\n        年: tap_lunar_time.getYearXunKong(),\n        月: tap_lunar_time.getMonthXunKong(),\n        日: tap_lunar_time.getDayXunKong()\n    },\n    \"宜\": tap_lunar_time.getDayYi().join('  '),\n    \"忌\": tap_lunar_time.getDayJi().join('  '),\n    \"吉神\": tap_lunar_time.getDayJiShen().join('  '), \n    \"凶煞\": tap_lunar_time.getDayXiongSha().join('  '),\n    \"彭祖干\": tap_lunar_time.getPengZuGan(),\n    \"彭祖支\": tap_lunar_time.getPengZuZhi(),\n    \"季节\": tap_lunar_time.getSeason(),\n    \"月相\": tap_lunar_time.getYueXiang() + \"月\", \n    \"物候\": tap_lunar_time.getHou() + \" \" + tap_lunar_time.getWuHou(),\n    \"喜神\": tap_lunar_time.getDayPositionXiDesc(),\n    \"福神\": tap_lunar_time.getDayPositionFuDesc(),\n    \"财神\": tap_lunar_time.getDayPositionCaiDesc(),\n    \"阳贵\": tap_lunar_time.getDayPositionYangGuiDesc(),\n    \"阴贵\": tap_lunar_time.getDayPositionYinGuiDesc(),\n    \"九星\": tap_lunar_time.getDayNineStar().toString(),\n    \"星宿\": tap_lunar_time.getGong() + \"方\" + tap_lunar_time.getXiu() + tap_lunar_time.getZheng() + tap_lunar_time.getAnimal() + \"(\" + tap_lunar_time.getXiuLuck() + \")\",\n    \"相冲\": tap_lunar_time.getDayShengXiao() + '日冲' + tap_lunar_time.getDayChongDesc(),\n    \"值星\": tap_lunar_time.getZhiXing(),\n    \"天神\": tap_lunar_time.getDayTianShen() + \"(\" + tap_lunar_time.getDayTianShenType() + tap_lunar_time.getDayTianShenLuck()+\"日)\",\n    \"本月胎神\": tap_lunar_time.getMonthPositionTai(),\n    \"今日胎神\": tap_lunar_time.getDayPositionTai(),\n    \"岁煞\": \"岁煞\" + tap_lunar_time.getDaySha(),\n    \"六耀\": tap_lunar_time.getLiuYao(),\n    \"七曜\": tap_lunar_time.getZheng(),\n    \"日禄\": tap_lunar_time.getDayLu(),\n    \"时辰干支\": [ganzi1, ganzi2, ganzi3, ganzi4, ganzi5, ganzi6, ganzi7, ganzi8, ganzi9, ganzi10, ganzi11, ganzi12, ganzi13],\n    \"时辰吉凶\":  [luck1, luck2, luck3, luck4, luck5, luck6, luck7, luck8, luck9, luck10, luck11, luck12, luck13],\n};\n\n//输出到实体\nvar outputMsg = {\n    \"Now_solar\": Now_solar,       //现在-阳历信息\n    \"Now_lunar\": Now_lunar,       //现在-农历信息\n    \"Tap_solar\": Tap_solar,       //点击-阳历信息\n    \"Tap_lunar\": Tap_lunar,       //点击-农历信息\n    \"Jieqi\": Jieqi,               //节气提醒信息\n    \"Shengriwarn\": Shengriwarn,   //生日提醒信息\n    \"Shengri\": Shengrinew,        //生日信息\n    \"Huangli\": Huangli,           //黄历信息\n    \"Solarday_num\": Solarday_num,   //阳历id\n    \"Lunarday_num\": Lunarday_num,   //农历id\n    \"Lunar_label\": Lunar_label,     //农历文本数组\n    \"Jieqi_label\": Jieqi_label,     //节气文本数组\n    \"Jiaqi_label\": Jiaqi_label,     //假期文本数组\n    \"Jieri_label_lunar\": Jieri_label_lunar,    //节日-农历-文本数组\n    \"Jieri_label_solar\": Jieri_label_solar,    //节日-阳历-文本数组\n};\nreturn outputMsg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "Lunar",
                "module": "lunar-javascript"
            }
        ],
        "x": 640,
        "y": 420,
        "wires": [
            [
                "955564606288bc47"
            ]
        ]
    },
    {
        "id": "955564606288bc47",
        "type": "ha-sensor",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "农历 sensor.lunar",
        "entityConfig": "1e814d1032ca3c69",
        "version": 0,
        "state": "Tap_solar['日期B']",
        "stateType": "msg",
        "attributes": [
            {
                "property": "Now_solar",
                "value": "Now_solar",
                "valueType": "msg"
            },
            {
                "property": "Now_lunar",
                "value": "Now_lunar",
                "valueType": "msg"
            },
            {
                "property": "Tap_solar",
                "value": "Tap_solar",
                "valueType": "msg"
            },
            {
                "property": "Tap_lunar",
                "value": "Tap_lunar",
                "valueType": "msg"
            },
            {
                "property": "Jieqi",
                "value": "Jieqi",
                "valueType": "msg"
            },
            {
                "property": "Shengriwarn",
                "value": "Shengriwarn",
                "valueType": "msg"
            },
            {
                "property": "Shengri",
                "value": "Shengri",
                "valueType": "msg"
            },
            {
                "property": "Huangli",
                "value": "Huangli",
                "valueType": "msg"
            },
            {
                "property": "Solarday_num",
                "value": "Solarday_num",
                "valueType": "msg"
            },
            {
                "property": "Lunarday_num",
                "value": "Lunarday_num",
                "valueType": "msg"
            },
            {
                "property": "Lunar_label",
                "value": "Lunar_label",
                "valueType": "msg"
            },
            {
                "property": "Jieqi_label",
                "value": "Jieqi_label",
                "valueType": "msg"
            },
            {
                "property": "Jiaqi_label",
                "value": "Jiaqi_label",
                "valueType": "msg"
            },
            {
                "property": "Jieri_label_lunar",
                "value": "Jieri_label_lunar",
                "valueType": "msg"
            },
            {
                "property": "Jieri_label_solar",
                "value": "Jieri_label_solar",
                "valueType": "msg"
            }
        ],
        "inputOverride": "allow",
        "outputProperties": [],
        "x": 910,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "d840f02c0b6833f3",
        "type": "server-state-changed",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "日期更新",
        "server": "d5d3e351.02443",
        "version": 6,
        "outputs": 1,
        "exposeAsEntityConfig": "",
        "entities": {
            "entity": [
                "text.lunar_ri_qi"
            ],
            "substring": [],
            "regex": []
        },
        "outputInitially": false,
        "stateType": "str",
        "ifState": "",
        "ifStateType": "str",
        "ifStateOperator": "is",
        "outputOnlyOnStateChange": false,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [],
        "x": 120,
        "y": 420,
        "wires": [
            [
                "ba25fb7a0d76fdc6"
            ]
        ]
    },
    {
        "id": "b0d27271977fc8a9",
        "type": "comment",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "生日/纪念日【维护生日】里维护",
        "info": "",
        "x": 870,
        "y": 260,
        "wires": []
    },
    {
        "id": "c3d75901827c1bd7",
        "type": "comment",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "【维护生日】【15-53行】里维护",
        "info": "",
        "x": 870,
        "y": 300,
        "wires": []
    },
    {
        "id": "332684eb89e75cd5",
        "type": "function",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "维护生日",
        "func": "/*初始化生日+纪念日数组,一共10组数据*/\nvar Shengri = [\n    { 名称: \"\", 阳历: \"\", 阳历天数: \"\", 阳历天数说明: \"\", 农历: \"\", 农历天数: \"\", 农历天数说明: \"\" },\n    { 名称: \"\", 阳历: \"\", 阳历天数: \"\", 阳历天数说明: \"\", 农历: \"\", 农历天数: \"\", 农历天数说明: \"\" },\n    { 名称: \"\", 阳历: \"\", 阳历天数: \"\", 阳历天数说明: \"\", 农历: \"\", 农历天数: \"\", 农历天数说明: \"\" },\n    { 名称: \"\", 阳历: \"\", 阳历天数: \"\", 阳历天数说明: \"\", 农历: \"\", 农历天数: \"\", 农历天数说明: \"\" },\n    { 名称: \"\", 阳历: \"\", 阳历天数: \"\", 阳历天数说明: \"\", 农历: \"\", 农历天数: \"\", 农历天数说明: \"\" },\n    { 名称: \"\", 阳历: \"\", 阳历天数: \"\", 阳历天数说明: \"\", 农历: \"\", 农历天数: \"\", 农历天数说明: \"\" },\n    { 名称: \"\", 阳历: \"\", 阳历天数: \"\", 阳历天数说明: \"\", 农历: \"\", 农历天数: \"\", 农历天数说明: \"\" },\n    { 名称: \"\", 阳历: \"\", 阳历天数: \"\", 阳历天数说明: \"\", 农历: \"\", 农历天数: \"\", 农历天数说明: \"\" },\n    { 名称: \"\", 阳历: \"\", 阳历天数: \"\", 阳历天数说明: \"\", 农历: \"\", 农历天数: \"\", 农历天数说明: \"\" },\n    { 名称: \"\", 阳历: \"\", 阳历天数: \"\", 阳历天数说明: \"\", 农历: \"\", 农历天数: \"\", 农历天数说明: \"\" },\n]\n\nShengri[0].名称 = \"AAA🎂\";\nShengri[0].阳历 = \"\";\nShengri[0].农历 = \"0930\";\n\nShengri[1].名称 = \"BBB🎂\";\nShengri[1].阳历 = \"\";\nShengri[1].农历 = \"0427\";\n\nShengri[2].名称 = \"CCC🎂\";\nShengri[2].阳历 = \"0421\";\nShengri[2].农历 = \"\";\n\nShengri[3].名称 = \"\";\nShengri[3].阳历 = \"\";\nShengri[3].农历 = \"\";\n\nShengri[4].名称 = \"\";\nShengri[4].阳历 = \"\";\nShengri[4].农历 = \"\";\n\nShengri[5].名称 = \"\";\nShengri[5].阳历 = \"\";\nShengri[5].农历 = \"\";\n\nShengri[6].名称 = \"\";\nShengri[6].阳历 = \"\";\nShengri[6].农历 = \"\";\n\nShengri[7].名称 = \"\";\nShengri[7].阳历 = \"\";\nShengri[7].农历 = \"\";\n\nShengri[8].名称 = \"\";\nShengri[8].阳历 = \"\";\nShengri[8].农历 = \"\";\n\nShengri[9].名称 = \"\";\nShengri[9].阳历 = \"\";\nShengri[9].农历 = \"\";\n\nvar outputMsg = {\n    \"date\": msg.date,          //过度下日期\n    \"Shengri\": Shengri         //生日数组\n};\nreturn outputMsg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [
            {
                "var": "Lunar",
                "module": "lunar-javascript"
            }
        ],
        "x": 420,
        "y": 420,
        "wires": [
            [
                "04b64d4aaf049959"
            ]
        ]
    },
    {
        "id": "383f9a4dae79506c",
        "type": "comment",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "所有蓝色的都要注意更换服务器",
        "info": "",
        "x": 870,
        "y": 120,
        "wires": []
    },
    {
        "id": "abb942190509f761",
        "type": "debug",
        "z": "8debaea502f81074",
        "g": "2034c7b6dac3fdda",
        "name": "这里Action要选择text.set_value",
        "active": true,
        "tosidebar": false,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 870,
        "y": 360,
        "wires": []
    },
    {
        "id": "599fae25d4e6723d",
        "type": "ha-entity-config",
        "server": "d5d3e351.02443",
        "deviceConfig": "5e18169cbf9aa2e0",
        "name": "lunar_上年",
        "version": 6,
        "entityType": "button",
        "haConfig": [
            {
                "property": "name",
                "value": "lunar_上年"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": ""
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "8ef66d6c93ec1bb8",
        "type": "ha-entity-config",
        "server": "d5d3e351.02443",
        "deviceConfig": "5e18169cbf9aa2e0",
        "name": "lunar_上月",
        "version": 6,
        "entityType": "button",
        "haConfig": [
            {
                "property": "name",
                "value": "lunar_上月"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": ""
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "2ca02103a825efa6",
        "type": "ha-entity-config",
        "server": "d5d3e351.02443",
        "deviceConfig": "5e18169cbf9aa2e0",
        "name": "lunar_下年",
        "version": 6,
        "entityType": "button",
        "haConfig": [
            {
                "property": "name",
                "value": "lunar_下年"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": ""
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "2e24de9caf749960",
        "type": "ha-entity-config",
        "server": "d5d3e351.02443",
        "deviceConfig": "5e18169cbf9aa2e0",
        "name": "lunar_下月",
        "version": 6,
        "entityType": "button",
        "haConfig": [
            {
                "property": "name",
                "value": "lunar_下月"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": ""
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "1c6ba2a217deaa45",
        "type": "ha-entity-config",
        "server": "d5d3e351.02443",
        "deviceConfig": "5e18169cbf9aa2e0",
        "name": "lunar_今天",
        "version": 6,
        "entityType": "button",
        "haConfig": [
            {
                "property": "name",
                "value": "lunar_今天"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": ""
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "0127accfa1f097fd",
        "type": "ha-entity-config",
        "server": "d5d3e351.02443",
        "deviceConfig": "5e18169cbf9aa2e0",
        "name": "lunar_日期",
        "version": 6,
        "entityType": "text",
        "haConfig": [
            {
                "property": "name",
                "value": "lunar_日期"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "mode",
                "value": "text"
            },
            {
                "property": "min_length",
                "value": 10
            },
            {
                "property": "max_length",
                "value": 10
            },
            {
                "property": "pattern",
                "value": ""
            }
        ],
        "resend": false,
        "debugEnabled": false
    },
    {
        "id": "d5d3e351.02443",
        "type": "server",
        "name": "Home Assistant",
        "addon": false,
        "rejectUnauthorizedCerts": false,
        "ha_boolean": "",
        "connectionDelay": false,
        "cacheJson": false,
        "heartbeat": false,
        "heartbeatInterval": "",
        "areaSelector": "friendlyName",
        "deviceSelector": "friendlyName",
        "entitySelector": "friendlyName",
        "statusSeparator": ":",
        "statusYear": "hidden",
        "statusMonth": "short",
        "statusDay": "numeric",
        "statusHourCycle": "default",
        "statusTimeFormat": "h:m",
        "enableGlobalContextStore": false
    },
    {
        "id": "1e814d1032ca3c69",
        "type": "ha-entity-config",
        "server": "d5d3e351.02443",
        "deviceConfig": "5e18169cbf9aa2e0",
        "name": "lunar",
        "version": "6",
        "entityType": "sensor",
        "haConfig": [
            {
                "property": "name",
                "value": "lunar"
            },
            {
                "property": "icon",
                "value": ""
            },
            {
                "property": "entity_picture",
                "value": ""
            },
            {
                "property": "entity_category",
                "value": ""
            },
            {
                "property": "device_class",
                "value": ""
            },
            {
                "property": "unit_of_measurement",
                "value": ""
            },
            {
                "property": "state_class",
                "value": ""
            }
        ],
        "resend": true,
        "debugEnabled": false
    },
    {
        "id": "5e18169cbf9aa2e0",
        "type": "ha-device-config",
        "name": "万年历",
        "hwVersion": "",
        "manufacturer": "Node-RED",
        "model": "",
        "swVersion": "消逝"
    }
]
